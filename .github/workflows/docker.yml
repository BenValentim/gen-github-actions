name: Dev build and Push to Artifact Registry GAR

on:
  push:
    branches: ["dev"]

env:
  REGION: ${{ secrets.REGION }}
  GAR_LOCATION: ${{ vars.GAR_LOCATION }}/mmp/${{ github.ref_name }}

jobs:
  build-push-artifact:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCLOUD_SERVICE_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: "Apply env"
        run: touch .env
          && rm .env
          && touch .env
          && echo WORKSPACE=${{ secrets.WORKSPACE }} >> .env
          && echo NEXT_PUBLIC_PROJECT_ID=${{ vars.NEXT_PUBLIC_PROJECT_ID }} >> .env
          && echo NEXT_PUBLIC_CHAIN_ID=${{ vars.NEXT_PUBLIC_CHAIN_ID }} >> .env
          && echo NEXT_PUBLIC_FOUNDER_POOL=${{ secrets.NEXT_PUBLIC_FOUNDER_POOL }} >> .env
          && echo NEXT_PUBLIC_FOUNDER_TOKEN=${{ secrets.NEXT_PUBLIC_FOUNDER_TOKEN }} >> .env
          && echo NEXT_PUBLIC_POOL_ADMIN=${{ secrets.NEXT_PUBLIC_POOL_ADMIN }} >> .env
          && echo NEXT_PUBLIC_MEGA_MAKER=${{ secrets.NEXT_PUBLIC_MEGA_MAKER }} >> .env
          && echo NEXT_PUBLIC_GLOBAL_POOL=${{ secrets.NEXT_PUBLIC_GLOBAL_POOL }} >> .env
          && echo NEXT_PUBLIC_MEGA_NETWORK=${{ secrets.NEXT_PUBLIC_MEGA_NETWORK }} >> .env
          && echo NEXT_PUBLIC_MEGA_DEPOSIT=${{ secrets.NEXT_PUBLIC_MEGA_DEPOSIT }} >> .env
          && echo NEXT_PUBLIC_USD=${{ secrets.NEXT_PUBLIC_USD }} >> .env
          && echo NEXT_PUBLIC_BOOK_ORDER=${{ secrets.NEXT_PUBLIC_BOOK_ORDER }} >> .env
          && echo NEXT_PUBLIC_V3_UNI_FACTORY=${{ secrets.NEXT_PUBLIC_V3_UNI_FACTORY }} >> .env
          && echo NEXT_PUBLIC_WMATIC=${{ secrets.NEXT_PUBLIC_WMATIC }} >> .env
          && echo NEXT_PUBLIC_URL_BASE_APP=${{ vars.NEXT_PUBLIC_URL_BASE_APP }} >> .env
          && echo NEXT_PUBLIC_DB_NAME=${{ secrets.NEXT_PUBLIC_DB_NAME }} >> .env
          && echo NEXT_PUBLIC_DB_VERSION=${{ vars.NEXT_PUBLIC_DB_VERSION }} >> .env
          && echo NEXT_PUBLIC_RPC_HTTP_MAIN=${{ secrets.NEXT_PUBLIC_RPC_HTTP_MAIN }} >> .env
          && echo NEXT_PUBLIC_RPC_HTTP_TEST=${{ secrets.NEXT_PUBLIC_RPC_HTTP_TEST }} >> .env
          && echo NEXT_PUBLIC_RPC_WS_MAIN=${{ secrets.NEXT_PUBLIC_RPC_WS_MAIN }} >> .env
          && echo NEXT_PUBLIC_RPC_WS_TEST=${{ secrets.NEXT_PUBLIC_RPC_WS_TEST }} >> .env
          && echo NEXT_PUBLIC_RPC_STALL_TIMEOUT=${{ vars.NEXT_PUBLIC_RPC_STALL_TIMEOUT }} >> .env
          && echo DB_USER=${{ secrets.DB_USER }} >> .env
          && echo DB_PASS=${{ secrets.DB_PASS }} >> .env
          && echo DB_NAME_SQL=${{ secrets.DB_NAME_SQL }} >> .env
          && echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          && echo NEXT_PUBLIC_COMING_ROUTE=${{ vars.NEXT_PUBLIC_COMING_ROUTE }} >> .env
          && echo NEXT_PUBLIC_BANNED_ADDRESSES=${{ vars.NEXT_PUBLIC_BANNED_ADDRESSES }} >> .env
          && echo NEXT_PUBLIC_MAX_TO_ADVANCE=${{ vars.NEXT_PUBLIC_MAX_TO_ADVANCE }} >> .env
          && echo NEXT_PUBLIC_DEXGURU_API_KEY=${{ secrets.NEXT_PUBLIC_DEXGURU_API_KEY }} >> .env
          && echo NEXT_PUBLIC_INITIAL_ADVANCE=${{ vars.NEXT_PUBLIC_INITIAL_ADVANCE }} >> .env
          && echo NEXT_PUBLIC_GOAL_POSITION=${{ vars.NEXT_PUBLIC_GOAL_POSITION }} >> .env
          && echo NEXT_PUBLIC_META_DEPOSIT=${{ vars.NEXT_PUBLIC_META_DEPOSIT }} >> .env
          && echo NEXT_PUBLIC_META_EACH_DEPOSIT=${{ vars.NEXT_PUBLIC_META_EACH_DEPOSIT }} >> .env
          && echo NEXT_PUBLIC_UNLOCK_POSITIONS=${{ vars.NEXT_PUBLIC_UNLOCK_POSITIONS }} >> .env
          && echo NEXT_PUBLIC_ADVANCE_POSITIONS=${{ vars.NEXT_PUBLIC_ADVANCE_POSITIONS }} >> .env
          && echo NEXT_PUBLIC_ADVANCE_POSITION_DEFAULT=${{ vars.NEXT_PUBLIC_ADVANCE_POSITION_DEFAULT }} >> .env
          && echo NEXT_PUBLIC_MAKER_FLIP=${{ secrets.NEXT_PUBLIC_MAKER_FLIP }} >> .env
          && echo NEXT_PUBLIC_MAKER_FLIP_CONTRIBUTE=${{ secrets.NEXT_PUBLIC_MAKER_FLIP_CONTRIBUTE }} >> .env
          && echo NEXT_PUBLIC_MAKER_FLIP_NETWORK=${{ secrets.NEXT_PUBLIC_MAKER_FLIP_NETWORK }} >> .env
          && echo NEXT_PUBLIC_MAKER_NFT=${{ secrets.NEXT_PUBLIC_MAKER_NFT }} >> .env
          && echo NEXT_PUBLIC_MAKER_QUOTER=${{ secrets.NEXT_PUBLIC_MAKER_QUOTER }} >> .env
          && echo NEXT_PUBLIC_MAKER_FLIP_GLOBAL_POOL=${{ secrets.NEXT_PUBLIC_MAKER_FLIP_GLOBAL_POOL }} >> .env
          && echo NEXT_PUBLIC_TIMEOUT=${{ vars.NEXT_PUBLIC_TIMEOUT }} >> .env
          && echo NEXT_PUBLIC_CONTRIBUTE_REQUIREMENTS=${{ vars.NEXT_PUBLIC_CONTRIBUTE_REQUIREMENTS }} >> .env
          && echo NEXT_PUBLIC_BURN_REQUIREMENTS=${{ vars.NEXT_PUBLIC_BURN_REQUIREMENTS }} >> .env
          && echo NEXT_PUBLIC_LOADER_TIMEOUT=${{ vars.NEXT_PUBLIC_LOADER_TIMEOUT }} >> .env
          && echo NEXT_PUBLIC_INDEXED_DB_REFRESH=${{ vars.NEXT_PUBLIC_INDEXED_DB_REFRESH }} >> .env
          && echo NEXT_PUBLIC_COMMISSION_VOLUME=${{ vars.NEXT_PUBLIC_COMMISSION_VOLUME }} >> .env
          && echo NEXT_PUBLIC_GOOGLE_ANALYTICS_TAG=${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS_TAG }} >> .env
          && echo NEXT_PUBLIC_HALVING=${{ vars.NEXT_PUBLIC_HALVING }} >> .env
          && echo NEXT_PUBLIC_MIN_DEPOSIT_AMOUNT=${{ vars.NEXT_PUBLIC_MIN_DEPOSIT_AMOUNT }} >> .env
          && echo BUILD_ID=${{ vars.BUILD_ID }} >> .env
          && echo NEXT_PUBLIC_USE_ALTERNATIVE_RPCS=${{ vars.NEXT_PUBLIC_USE_ALTERNATIVE_RPCS }} >> .env
          && echo NEXT_PUBLIC_RPCS_HTTP_MAIN=${{ secrets.NEXT_PUBLIC_RPCS_HTTP_MAIN }} >> .env
          && echo API_URL=${{ secrets.API_URL }} >> .env
          && echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
      - name: Build image
        run: docker build . --file ./Dockerfile --tag ${{ env.GAR_LOCATION }}
        working-directory: ./
      - name: Push image
        run: docker push ${{ env.GAR_LOCATION }}
      - name: Deploy Stage
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.API_URL }}/build/apply
          method: "POST"
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"id": ${{ vars.BUILD_ID }},"buildId": "${{ github.sha }}","key":"${{ secrets.BUILD_KEY }}"}'
